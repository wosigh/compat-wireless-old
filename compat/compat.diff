--- a/include/net/cfg80211.h.old	2007-11-12 15:35:05.000000000 -0500
+++ b/include/net/cfg80211.h	2007-11-12 15:35:14.000000000 -0500
@@ -5,6 +5,7 @@
 #include <linux/skbuff.h>
 #include <linux/nl80211.h>
 #include <net/genetlink.h>
+#include <net/compat.h>
 
 /*
  * 802.11 configuration in-kernel interface
--- a/net/mac80211/Makefile	2007-11-10 17:52:07.000000000 -0500
+++ b/net/mac80211/Makefile	2007-11-10 17:52:38.000000000 -0500
@@ -24,4 +24,5 @@
 	key.o \
 	util.o \
 	event.o \
+	compat.o \
 	$(mac80211-objs-y)
--- a/net/mac80211/tx.c	2007-11-09 13:14:28.000000000 -0500
+++ b/net/mac80211/tx.c	2007-11-09 15:40:09.000000000 -0500
@@ -18,7 +18,9 @@
 #include <linux/etherdevice.h>
 #include <linux/bitmap.h>
 #include <linux/rcupdate.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #include <net/net_namespace.h>
+#endif
 #include <net/ieee80211_radiotap.h>
 #include <net/cfg80211.h>
 #include <net/mac80211.h>
--- a/net/mac80211/util.c	2007-11-09 13:14:57.000000000 -0500
+++ b/net/mac80211/util.c	2007-11-09 15:41:40.000000000 -0500
@@ -20,7 +20,9 @@
 #include <linux/if_arp.h>
 #include <linux/wireless.h>
 #include <linux/bitmap.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #include <net/net_namespace.h>
+#endif
 #include <net/cfg80211.h>
 
 #include "ieee80211_i.h"
--- a/net/mac80211/ieee80211.c	2007-11-07 12:42:38.000000000 -0500
+++ b/net/mac80211/ieee80211.c	2007-11-09 13:18:58.000000000 -0500
@@ -21,7 +21,9 @@
 #include <linux/wireless.h>
 #include <linux/rtnetlink.h>
 #include <linux/bitmap.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #include <net/net_namespace.h>
+#endif
 #include <net/cfg80211.h>
 
 #include "ieee80211_i.h"
@@ -400,7 +402,9 @@
 void ieee80211_if_setup(struct net_device *dev)
 {
 	ether_setup(dev);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 	dev->header_ops = &ieee80211_header_ops;
+#endif
 	dev->hard_start_xmit = ieee80211_subif_start_xmit;
 	dev->wireless_handlers = &ieee80211_iw_handler_def;
 	dev->set_multicast_list = ieee80211_set_multicast_list;
@@ -987,7 +991,9 @@
 	mdev->open = ieee80211_master_open;
 	mdev->stop = ieee80211_master_stop;
 	mdev->type = ARPHRD_IEEE80211;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 	mdev->header_ops = &ieee80211_header_ops;
+#endif
 	mdev->set_multicast_list = ieee80211_master_set_multicast_list;
 
 	sdata->type = IEEE80211_IF_TYPE_AP;
--- a/net/wireless/sysfs.c	2007-11-06 16:05:57.000000000 -0500
+++ b/net/wireless/sysfs.c	2007-11-06 16:07:17.000000000 -0500
@@ -52,6 +52,7 @@
 	cfg80211_dev_free(rdev);
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #ifdef CONFIG_HOTPLUG
 static int wiphy_uevent(struct device *dev, struct kobj_uevent_env *env)
 {
@@ -59,15 +60,18 @@
 	return 0;
 }
 #endif
+#endif
 
 struct class ieee80211_class = {
 	.name = "ieee80211",
 	.owner = THIS_MODULE,
 	.dev_release = wiphy_dev_release,
 	.dev_attrs = ieee80211_dev_attrs,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #ifdef CONFIG_HOTPLUG
 	.dev_uevent = wiphy_uevent,
 #endif
+#endif
 };
 
 int wiphy_sysfs_init(void)
--- a/include/linux/bitops.h	2007-11-05 18:44:25.000000000 -0500
+++ b/include/linux/bitops.h	2007-11-05 18:55:18.000000000 -0500
@@ -1,12 +1,15 @@
 #ifndef _LINUX_BITOPS_H
 #define _LINUX_BITOPS_H
 #include <asm/types.h>
+#include <linux/version.h>
 
 #ifdef	__KERNEL__
 #define BIT(nr)			(1UL << (nr))
 #define BIT_MASK(nr)		(1UL << ((nr) % BITS_PER_LONG))
 #define BIT_WORD(nr)		((nr) / BITS_PER_LONG)
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,23))
 #define BITS_TO_LONGS(nr)	DIV_ROUND_UP(nr, BITS_PER_LONG)
+#endif
 #define BITS_PER_BYTE		8
 #endif
 
--- a/include/linux/ssb/ssb.h	2007-11-09 18:46:01.000000000 -0500
+++ b/include/linux/ssb/ssb.h	2007-11-09 18:46:08.000000000 -0500
@@ -9,6 +9,7 @@
 #include <linux/mod_devicetable.h>
 
 #include <linux/ssb/ssb_regs.h>
+#include <net/compat.h>
 
 
 struct pcmcia_device;
--- a/drivers/ssb/main.c	2007-11-09 17:34:12.000000000 -0500
+++ b/drivers/ssb/main.c	2007-11-09 17:54:47.000000000 -0500
@@ -321,6 +321,27 @@
 	return 0;
 }
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24))
+static int ssb_device_uevent(struct device *dev, char **envp,
+	int num_envp, char *buffer, int buffer_size)
+{
+	struct ssb_device *ssb_dev = dev_to_ssb_dev(dev);
+	int cur_index = 0, cur_len = 0;
+
+	if (!dev)
+		return -ENODEV;
+
+	return add_uevent_var(envp,
+			num_envp,
+			&cur_index,
+			buffer,
+			buffer_size,
+			&cur_len,
+			"MODALIAS=ssb:v%04Xid%04Xrev%02X",
+			ssb_dev->id.vendor, ssb_dev->id.coreid,
+			ssb_dev->id.revision);
+}
+#else
 static int ssb_device_uevent(struct device *dev, struct kobj_uevent_env *env)
 {
 	struct ssb_device *ssb_dev = dev_to_ssb_dev(dev);
@@ -333,6 +354,7 @@
 			     ssb_dev->id.vendor, ssb_dev->id.coreid,
 			     ssb_dev->id.revision);
 }
+#endif
 
 static struct bus_type ssb_bustype = {
 	.name		= "ssb",
--- a/net/mac80211/cfg.c	2007-11-13 17:02:24.000000000 -0500
+++ b/net/mac80211/cfg.c	2007-11-13 17:02:39.000000000 -0500
@@ -8,7 +8,9 @@
 
 #include <linux/nl80211.h>
 #include <linux/rtnetlink.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #include <net/net_namespace.h>
+#endif
 #include <net/cfg80211.h>
 #include "ieee80211_i.h"
 #include "cfg.h"
