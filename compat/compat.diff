--- a/include/net/cfg80211.h.old	2007-11-12 15:35:05.000000000 -0500
+++ b/include/net/cfg80211.h	2007-11-12 15:35:14.000000000 -0500
@@ -5,6 +5,7 @@
 #include <linux/skbuff.h>
 #include <linux/nl80211.h>
 #include <net/genetlink.h>
+#include <net/compat.h>
 
 /*
  * 802.11 configuration in-kernel interface
--- a/net/mac80211/Makefile	2007-11-10 17:52:07.000000000 -0500
+++ b/net/mac80211/Makefile	2007-11-10 17:52:38.000000000 -0500
@@ -24,4 +24,5 @@
 	key.o \
 	util.o \
 	event.o \
+	compat.o \
 	$(mac80211-objs-y)
--- a/net/mac80211/tx.c	2007-11-09 13:14:28.000000000 -0500
+++ b/net/mac80211/tx.c	2007-11-09 15:40:09.000000000 -0500
@@ -18,7 +18,9 @@
 #include <linux/etherdevice.h>
 #include <linux/bitmap.h>
 #include <linux/rcupdate.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #include <net/net_namespace.h>
+#endif
 #include <net/ieee80211_radiotap.h>
 #include <net/cfg80211.h>
 #include <net/mac80211.h>
--- a/net/mac80211/util.c	2007-11-09 13:14:57.000000000 -0500
+++ b/net/mac80211/util.c	2007-11-09 15:41:40.000000000 -0500
@@ -20,7 +20,9 @@
 #include <linux/if_arp.h>
 #include <linux/wireless.h>
 #include <linux/bitmap.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #include <net/net_namespace.h>
+#endif
 #include <net/cfg80211.h>
 
 #include "ieee80211_i.h"
--- a/net/mac80211/ieee80211.c	2007-11-07 12:42:38.000000000 -0500
+++ b/net/mac80211/ieee80211.c	2007-11-09 13:18:58.000000000 -0500
@@ -21,7 +21,9 @@
 #include <linux/wireless.h>
 #include <linux/rtnetlink.h>
 #include <linux/bitmap.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #include <net/net_namespace.h>
+#endif
 #include <net/cfg80211.h>
 
 #include "ieee80211_i.h"
@@ -400,7 +402,9 @@
 void ieee80211_if_setup(struct net_device *dev)
 {
 	ether_setup(dev);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 	dev->header_ops = &ieee80211_header_ops;
+#endif
 	dev->hard_start_xmit = ieee80211_subif_start_xmit;
 	dev->wireless_handlers = &ieee80211_iw_handler_def;
 	dev->set_multicast_list = ieee80211_set_multicast_list;
@@ -987,7 +991,9 @@
 	mdev->open = ieee80211_master_open;
 	mdev->stop = ieee80211_master_stop;
 	mdev->type = ARPHRD_IEEE80211;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 	mdev->header_ops = &ieee80211_header_ops;
+#endif
 	mdev->set_multicast_list = ieee80211_master_set_multicast_list;
 
 	sdata->type = IEEE80211_IF_TYPE_AP;
--- a/net/wireless/sysfs.c	2007-11-06 16:05:57.000000000 -0500
+++ b/net/wireless/sysfs.c	2007-11-06 16:07:17.000000000 -0500
@@ -52,6 +52,7 @@
 	cfg80211_dev_free(rdev);
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #ifdef CONFIG_HOTPLUG
 static int wiphy_uevent(struct device *dev, struct kobj_uevent_env *env)
 {
@@ -59,15 +60,18 @@
 	return 0;
 }
 #endif
+#endif
 
 struct class ieee80211_class = {
 	.name = "ieee80211",
 	.owner = THIS_MODULE,
 	.dev_release = wiphy_dev_release,
 	.dev_attrs = ieee80211_dev_attrs,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #ifdef CONFIG_HOTPLUG
 	.dev_uevent = wiphy_uevent,
 #endif
+#endif
 };
 
 int wiphy_sysfs_init(void)
--- a/include/linux/bitops.h	2007-11-05 18:44:25.000000000 -0500
+++ b/include/linux/bitops.h	2007-11-05 18:55:18.000000000 -0500
@@ -1,12 +1,15 @@
 #ifndef _LINUX_BITOPS_H
 #define _LINUX_BITOPS_H
 #include <asm/types.h>
+#include <linux/version.h>
 
 #ifdef	__KERNEL__
 #define BIT(nr)			(1UL << (nr))
 #define BIT_MASK(nr)		(1UL << ((nr) % BITS_PER_LONG))
 #define BIT_WORD(nr)		((nr) / BITS_PER_LONG)
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,23))
 #define BITS_TO_LONGS(nr)	DIV_ROUND_UP(nr, BITS_PER_LONG)
+#endif
 #define BITS_PER_BYTE		8
 #endif
 
--- a/include/linux/ssb/ssb.h	2007-11-09 18:46:01.000000000 -0500
+++ b/include/linux/ssb/ssb.h	2007-11-09 18:46:08.000000000 -0500
@@ -9,6 +9,7 @@
 #include <linux/mod_devicetable.h>
 
 #include <linux/ssb/ssb_regs.h>
+#include <net/compat.h>
 
 
 struct pcmcia_device;
--- a/drivers/ssb/main.c	2007-11-09 17:34:12.000000000 -0500
+++ b/drivers/ssb/main.c	2007-11-09 17:54:47.000000000 -0500
@@ -321,6 +321,27 @@
 	return 0;
 }
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24))
+static int ssb_device_uevent(struct device *dev, char **envp,
+	int num_envp, char *buffer, int buffer_size)
+{
+	struct ssb_device *ssb_dev = dev_to_ssb_dev(dev);
+	int cur_index = 0, cur_len = 0;
+
+	if (!dev)
+		return -ENODEV;
+
+	return add_uevent_var(envp,
+			num_envp,
+			&cur_index,
+			buffer,
+			buffer_size,
+			&cur_len,
+			"MODALIAS=ssb:v%04Xid%04Xrev%02X",
+			ssb_dev->id.vendor, ssb_dev->id.coreid,
+			ssb_dev->id.revision);
+}
+#else
 static int ssb_device_uevent(struct device *dev, struct kobj_uevent_env *env)
 {
 	struct ssb_device *ssb_dev = dev_to_ssb_dev(dev);
@@ -333,6 +354,7 @@
 			     ssb_dev->id.vendor, ssb_dev->id.coreid,
 			     ssb_dev->id.revision);
 }
+#endif
 
 static struct bus_type ssb_bustype = {
 	.name		= "ssb",
--- a/net/mac80211/cfg.c	2007-11-13 17:02:24.000000000 -0500
+++ b/net/mac80211/cfg.c	2007-11-13 17:02:39.000000000 -0500
@@ -8,7 +8,9 @@
 
 #include <linux/nl80211.h>
 #include <linux/rtnetlink.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 #include <net/net_namespace.h>
+#endif
 #include <net/cfg80211.h>
 #include "ieee80211_i.h"
 #include "cfg.h"
--- a/drivers/net/wireless/adm8211.h	2007-11-15 19:12:07.000000000 -0500
+++ b/drivers/net/wireless/adm8211.h	2007-11-15 20:01:20.000000000 -0500
@@ -416,8 +416,13 @@
 #define TDES1_CONTROL_RBS1	(0x00000fff)
 
 /* SRAM offsets */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+#define ADM8211_SRAM(x) (priv->revid < ADM8211_REV_BA ? \
+        ADM8211_SRAM_A_ ## x : ADM8211_SRAM_B_ ## x)
+#else
 #define ADM8211_SRAM(x) (priv->pdev->revision < ADM8211_REV_BA ? \
         ADM8211_SRAM_A_ ## x : ADM8211_SRAM_B_ ## x)
+#endif
 
 #define ADM8211_SRAM_INDIV_KEY   0x0000
 #define ADM8211_SRAM_A_SHARE_KEY 0x0160
@@ -622,6 +627,9 @@
 	u8 lnags_threshold;
 	struct adm8211_eeprom *eeprom;
 	size_t eeprom_len;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	u8 revid;
+#endif
 
 	u32 nar;
 
--- a/drivers/net/wireless/adm8211.c	2007-11-15 19:11:53.000000000 -0500
+++ b/drivers/net/wireless/adm8211.c	2007-11-15 20:03:15.000000000 -0500
@@ -117,7 +117,11 @@
 		break;
 
 	default:
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+		if (priv->revid < ADM8211_REV_CA)
+#else
 		if (priv->pdev->revision < ADM8211_REV_CA)
+#endif
 			priv->rf_type = ADM8211_TYPE_RFMD;
 		else
 			priv->rf_type = ADM8211_TYPE_AIROHA;
@@ -135,7 +139,11 @@
 	case ADM8211_TYPE_ADMTEK:
 		break;
 	default:
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+		if (priv->revid < ADM8211_REV_CA)
+#else
 		if (priv->pdev->revision < ADM8211_REV_CA)
+#endif
 			priv->bbp_type = ADM8211_TYPE_RFMD;
 		else
 			priv->bbp_type = ADM8211_TYPE_ADMTEK;
@@ -175,7 +183,11 @@
 		break;
 
 	default:
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+		if (priv->revid < ADM8211_REV_CA)
+#else
 		if (priv->pdev->revision < ADM8211_REV_CA)
+#endif
 			priv->specific_bbptype = ADM8211_BBP_RFMD3000;
 		else
 			priv->specific_bbptype = ADM8211_BBP_ADM8011;
@@ -194,11 +206,23 @@
 		break;
 
 	default:
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+		if (priv->revid == ADM8211_REV_BA)
+#else
 		if (priv->pdev->revision == ADM8211_REV_BA)
+#endif
 			priv->transceiver_type = ADM8211_RFMD2958_RF3000_CONTROL_POWER;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+		else if (priv->revid == ADM8211_REV_CA)
+#else
 		else if (priv->pdev->revision == ADM8211_REV_CA)
+#endif
 			priv->transceiver_type = ADM8211_AL2210L;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+		else if (priv->revid == ADM8211_REV_AB)
+#else
 		else if (priv->pdev->revision == ADM8211_REV_AB)
+#endif
 			priv->transceiver_type = ADM8211_RFMD2948;
 
 		printk(KERN_WARNING "%s (adm8211): Unknown transceiver: %d\n",
@@ -220,7 +244,11 @@
 	struct adm8211_priv *priv = dev->priv;
 
 	ADM8211_CSR_WRITE(WEPCTL, addr | ADM8211_WEPCTL_TABLE_WR |
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+			(priv->revid < ADM8211_REV_BA ?
+#else
 			  (priv->pdev->revision < ADM8211_REV_BA ?
+#endif
 			   0 : ADM8211_WEPCTL_SEL_WEPTABLE ));
 	ADM8211_CSR_READ(WEPCTL);
 	msleep(1);
@@ -238,7 +266,11 @@
 	u32 reg = ADM8211_CSR_READ(WEPCTL);
 	unsigned int i;
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	if (priv->revid < ADM8211_REV_BA) {
+#else
 	if (priv->pdev->revision < ADM8211_REV_BA) {
+#endif
 		for (i = 0; i < len; i += 2) {
 			u16 val = buf[i] | (buf[i + 1] << 8);
 			adm8211_write_sram(dev, addr + i / 2, val);
@@ -420,7 +452,11 @@
 		if (skb) {
 			struct ieee80211_rx_status rx_status = {0};
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+			if (priv->revid < ADM8211_REV_CA)
+#else
 			if (priv->pdev->revision < ADM8211_REV_CA)
+#endif
 				rx_status.ssi = rssi;
 			else
 				rx_status.ssi = 100 - rssi;
@@ -702,7 +738,11 @@
 		adm8211_rf_write_syn_rfmd2958(dev, 0x0A, reg);
 		/* set TXRX TX_GAIN */
 		adm8211_rf_write_syn_rfmd2958(dev, 0x09, 0x00050 |
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+			(priv->revid < ADM8211_REV_CA ? tx_power : 0));
+#else
 			(priv->pdev->revision < ADM8211_REV_CA ? tx_power : 0));
+#endif
 	} else {
 		reg = ADM8211_CSR_READ(PLCPHD);
 		reg &= 0xff00ffff;
@@ -721,7 +761,11 @@
 				  tx_power<<2);
 	adm8211_write_bbp(dev, RF3000_LOW_GAIN_CALIB, lpf_cutoff);
 	adm8211_write_bbp(dev, RF3000_HIGH_GAIN_CALIB, lnags_thresh);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	adm8211_write_bbp(dev, 0x1c, priv->revid == ADM8211_REV_BA ?
+#else
 	adm8211_write_bbp(dev, 0x1c, priv->pdev->revision == ADM8211_REV_BA ?
+#endif
 				     priv->eeprom->cr28 : 0);
 	adm8211_write_bbp(dev, 0x1d, priv->eeprom->cr29);
 
@@ -760,7 +804,11 @@
 		priv->nar |= ADM8211_NAR_EA | ADM8211_NAR_ST | ADM8211_NAR_SR;
 
 		/* don't trust the error bits on rev 0x20 and up in adhoc */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+		if (priv->revid >= ADM8211_REV_BA)
+#else
 		if (priv->pdev->revision >= ADM8211_REV_BA)
+#endif
 			priv->soft_rx_crc = 1;
 		break;
 	case IEEE80211_IF_TYPE_MNTR:
@@ -861,7 +909,11 @@
 			break;
 		}
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+		switch (priv->revid) {
+#else
 		switch (priv->pdev->revision) {
+#endif
 		case ADM8211_REV_CA:
 			if (priv->transceiver_type == ADM8211_RFMD2958 ||
 			    priv->transceiver_type == ADM8211_RFMD2958_RF3000_CONTROL_POWER ||
@@ -919,7 +971,11 @@
 			adm8211_write_bbp(dev, 0x1c, 0x00);
 			adm8211_write_bbp(dev, 0x1d, 0x80);
 		} else {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+			if (priv->revid == ADM8211_REV_BA)
+#else
 			if (priv->pdev->revision == ADM8211_REV_BA)
+#endif
 				adm8211_write_bbp(dev, 0x1c, priv->eeprom->cr28);
 			else
 				adm8211_write_bbp(dev, 0x1c, 0x00);
@@ -1051,7 +1107,11 @@
 	u8 rate_buf[12] = {0};
 
 	/* write supported rates */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	if (priv->revid != ADM8211_REV_BA) {
+#else
 	if (priv->pdev->revision != ADM8211_REV_BA) {
+#endif
 		rate_buf[0] = ARRAY_SIZE(adm8211_rates);
 		for (i = 0; i < ARRAY_SIZE(adm8211_rates); i++)
 			rate_buf[i + 1] = (adm8211_rates[i].rate / 5) | 0x80;
@@ -1135,7 +1195,11 @@
 	 * PWR0PE2  = 13 us
 	 * PWR1PE2  = 1 us
 	 * PWR0TXPE = 8 or 6 */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	if (priv->revid < ADM8211_REV_CA)
+#else
 	if (priv->pdev->revision < ADM8211_REV_CA)
+#endif
 		ADM8211_CSR_WRITE(TOFS2, 0x8815cd18);
 	else
 		ADM8211_CSR_WRITE(TOFS2, 0x8535cd16);
@@ -1164,7 +1228,11 @@
 
 	/* SLOT=20 us, SIFS=110 cycles of 22 MHz (5 us),
 	 * DIFS=50 us, EIFS=100 us */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	if (priv->revid < ADM8211_REV_CA)
+#else
 	if (priv->pdev->revision < ADM8211_REV_CA)
+#endif
 		ADM8211_CSR_WRITE(IFST, (20 << 23) | (110 << 15) |
 					(50 << 9)  | 100);
 	else
@@ -1223,13 +1291,21 @@
 
 	ADM8211_CSR_WRITE(PAR, tmp);
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	if (priv->revid == ADM8211_REV_BA &&
+#else
 	if (priv->pdev->revision == ADM8211_REV_BA &&
+#endif
 	    (priv->transceiver_type == ADM8211_RFMD2958_RF3000_CONTROL_POWER ||
 	     priv->transceiver_type == ADM8211_RFMD2958)) {
 		reg = ADM8211_CSR_READ(CSR_TEST1);
 		reg |= (1 << 4) | (1 << 5);
 		ADM8211_CSR_WRITE(CSR_TEST1, reg);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	} else if (priv->revid == ADM8211_REV_CA) {
+#else
 	} else if (priv->pdev->revision == ADM8211_REV_CA) {
+#endif
 		reg = ADM8211_CSR_READ(CSR_TEST1);
 		reg &= ~((1 << 4) | (1 << 5));
 		ADM8211_CSR_WRITE(CSR_TEST1, reg);
@@ -1866,6 +1942,9 @@
 		       pci_name(pdev));
 		goto err_iounmap;
 	}
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	pci_read_config_byte(pdev, PCI_CLASS_REVISION, &priv->revid);
+#endif
 
 	*(u32 *)perm_addr = le32_to_cpu((__force __le32)ADM8211_CSR_READ(PAR0));
 	*(u16 *)&perm_addr[4] =
@@ -1901,7 +1980,11 @@
 	priv->mode = IEEE80211_IF_TYPE_INVALID;
 
 	/* Power-on issue. EEPROM won't read correctly without */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	if (priv->revid >= ADM8211_REV_BA) {
+#else
 	if (pdev->revision >= ADM8211_REV_BA) {
+#endif
 		ADM8211_CSR_WRITE(FRCTL, 0);
 		ADM8211_CSR_READ(FRCTL);
 		ADM8211_CSR_WRITE(FRCTL, 1);
@@ -1934,7 +2017,11 @@
 
 	printk(KERN_INFO "%s: hwaddr %s, Rev 0x%02x\n",
 	       wiphy_name(dev->wiphy), print_mac(mac, dev->wiphy->perm_addr),
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23))
+	       priv->revid);
+#else
 	       pdev->revision);
+#endif
 
 	return 0;
 
--- a/drivers/net/wireless/Makefile	2007-11-15 20:36:34.000000000 -0500
+++ b/drivers/net/wireless/Makefile	2007-11-15 20:37:26.000000000 -0500
@@ -2,52 +2,10 @@
 # Makefile for the Linux Wireless network device drivers.
 #
 
-obj-$(CONFIG_IPW2100) += ipw2100.o
-
-obj-$(CONFIG_IPW2200) += ipw2200.o
-
-obj-$(CONFIG_STRIP) += strip.o
-obj-$(CONFIG_ARLAN) += arlan.o 
-
-arlan-objs := arlan-main.o arlan-proc.o
-
-# Obsolete cards
-obj-$(CONFIG_WAVELAN)		+= wavelan.o
-obj-$(CONFIG_PCMCIA_NETWAVE)	+= netwave_cs.o
-obj-$(CONFIG_PCMCIA_WAVELAN)	+= wavelan_cs.o
-
-obj-$(CONFIG_HERMES)		+= orinoco.o hermes.o
-obj-$(CONFIG_PCMCIA_HERMES)	+= orinoco_cs.o
-obj-$(CONFIG_APPLE_AIRPORT)	+= airport.o
-obj-$(CONFIG_PLX_HERMES)	+= orinoco_plx.o
-obj-$(CONFIG_PCI_HERMES)	+= orinoco_pci.o
-obj-$(CONFIG_TMD_HERMES)	+= orinoco_tmd.o
-obj-$(CONFIG_NORTEL_HERMES)	+= orinoco_nortel.o
-obj-$(CONFIG_PCMCIA_SPECTRUM)	+= spectrum_cs.o
-
-obj-$(CONFIG_AIRO)		+= airo.o
-obj-$(CONFIG_AIRO_CS)		+= airo_cs.o airo.o
-
-obj-$(CONFIG_ATMEL)             += atmel.o
-obj-$(CONFIG_PCI_ATMEL)         += atmel_pci.o 
-obj-$(CONFIG_PCMCIA_ATMEL)      += atmel_cs.o
-
-obj-$(CONFIG_USB_ATMEL)	        += at76_usb.o
-
-obj-$(CONFIG_PRISM54)		+= prism54/
-
-obj-$(CONFIG_HOSTAP)		+= hostap/
-obj-$(CONFIG_BCM43XX)		+= bcm43xx/
 obj-$(CONFIG_B43)		+= b43/
 obj-$(CONFIG_B43LEGACY)		+= b43legacy/
-obj-$(CONFIG_ZD1211RW)		+= zd1211rw/
 obj-$(CONFIG_ZD1211RW_MAC80211)	+= zd1211rw-mac80211/
 
-# 16-bit wireless PCMCIA client drivers
-obj-$(CONFIG_PCMCIA_RAYCS)	+= ray_cs.o
-obj-$(CONFIG_PCMCIA_WL3501)	+= wl3501_cs.o
-
-obj-$(CONFIG_USB_ZD1201)	+= zd1201.o
 obj-$(CONFIG_LIBERTAS)		+= libertas/
 
 rtl8180-objs		:= rtl8180_dev.o rtl8180_rtl8225.o
--- a/drivers/misc/Makefile	2007-11-15 22:15:29.000000000 -0500
+++ b/drivers/misc/Makefile	2007-11-15 22:15:45.000000000 -0500
@@ -3,17 +3,4 @@
 #
 obj- := misc.o	# Dummy rule to force built-in.o to be made
 
-obj-$(CONFIG_IBM_ASM)		+= ibmasm/
-obj-$(CONFIG_HDPU_FEATURES)	+= hdpuftrs/
-obj-$(CONFIG_MSI_LAPTOP)     += msi-laptop.o
-obj-$(CONFIG_ASUS_LAPTOP)     += asus-laptop.o
-obj-$(CONFIG_ATMEL_SSC)		+= atmel-ssc.o
-obj-$(CONFIG_LKDTM)		+= lkdtm.o
-obj-$(CONFIG_TIFM_CORE)       	+= tifm_core.o
-obj-$(CONFIG_TIFM_7XX1)       	+= tifm_7xx1.o
-obj-$(CONFIG_PHANTOM)		+= phantom.o
-obj-$(CONFIG_SGI_IOC4)		+= ioc4.o
-obj-$(CONFIG_SONY_LAPTOP)	+= sony-laptop.o
-obj-$(CONFIG_THINKPAD_ACPI)	+= thinkpad_acpi.o
-obj-$(CONFIG_FUJITSU_LAPTOP)	+= fujitsu-laptop.o
 obj-$(CONFIG_EEPROM_93CX6)	+= eeprom_93cx6.o
--- a/drivers/net/wireless/libertas/dev.h	2007-11-15 20:19:33.000000000 -0500
+++ b/drivers/net/wireless/libertas/dev.h	2007-11-15 20:27:51.000000000 -0500
@@ -11,6 +11,7 @@
 #include <linux/ethtool.h>
 #include <linux/debugfs.h>
 #include <net/ieee80211.h>
+#include <net/compat.h>
 
 #include "defs.h"
 #include "scan.h"
--- a/drivers/net/wireless/libertas/ethtool.c	2007-11-16 19:05:35.000000000 -0500
+++ b/drivers/net/wireless/libertas/ethtool.c	2007-11-16 19:06:41.000000000 -0500
@@ -143,6 +143,7 @@
 	lbs_deb_enter(LBS_DEB_ETHTOOL);
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 static int lbs_ethtool_get_sset_count(struct net_device * dev, int sset)
 {
 	switch (sset) {
@@ -152,6 +153,7 @@
 		return -EOPNOTSUPP;
 	}
 }
+#endif
 
 static void lbs_ethtool_get_strings(struct net_device *dev,
 					  u32 stringset,
@@ -177,7 +179,9 @@
 	.get_drvinfo = lbs_ethtool_get_drvinfo,
 	.get_eeprom =  lbs_ethtool_get_eeprom,
 	.get_eeprom_len = lbs_ethtool_get_eeprom_len,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24))
 	.get_sset_count = lbs_ethtool_get_sset_count,
+#endif
 	.get_ethtool_stats = lbs_ethtool_get_stats,
 	.get_strings = lbs_ethtool_get_strings,
 };
